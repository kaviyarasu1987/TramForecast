// Generated by Dagger (https://google.github.io/dagger).
package com.rim.tramforecast.data;

import dagger.internal.Factory;
import javax.inject.Provider;

public final class GetForecast_Factory implements Factory<GetForecast> {
  private final Provider<ForecastRepository> forecastRepositoryProvider;

  public GetForecast_Factory(Provider<ForecastRepository> forecastRepositoryProvider) {
    this.forecastRepositoryProvider = forecastRepositoryProvider;
  }

  @Override
  public GetForecast get() {
    return provideInstance(forecastRepositoryProvider);
  }

  public static GetForecast provideInstance(
      Provider<ForecastRepository> forecastRepositoryProvider) {
    return new GetForecast(forecastRepositoryProvider.get());
  }

  public static GetForecast_Factory create(
      Provider<ForecastRepository> forecastRepositoryProvider) {
    return new GetForecast_Factory(forecastRepositoryProvider);
  }

  public static GetForecast newGetForecast(ForecastRepository forecastRepository) {
    return new GetForecast(forecastRepository);
  }
}
